** Begin Fixes Needed **

The "rake test" step still fails. Don't use this yet. 

Peter Zingg probably built this for some student or social networking related purpose, 
judging by the profile fields. I'm toying with removing those for my own baseapp. 
I need a different model there for most projects I can think of. Expect later revisions
to remove social networking fields and to see a branch with business oriented fields.

** End Fixes Needed **

Account management system based on latest gems and plugins.

Differences from PeterZingg/baseapp-openid?

* configatron option to lowercase all passwords; expunged

_Getting Going_

Sign up for Github, if you haven't already, and fork this project, for free.
Clone from *your* fork (the one labelled: Your Clone URL).

Sign up for recaptcha and get public and private API keys at http://www.recaptcha.net
Create config/database.yml ; horrible things happen if you don't
Copy config/config.yml.sample to config/config.yml; edit, at least for recaptcha keys
Copy config/mail.yml.sample to config/mail.yml; edit to suit
Run 'rake secret' and the secret in config/environment.rb
Make the "log" directory (mkdir log)
Run rake db:migrate
Run rake test; fix any reported problems
Run script/server; test the UI works as you expect

Done. 

You can now start mutating and evolving this in your own branch. Good luck.

Peter Zingg put in a lot of work to make this baseapp. Thanks for making it available Peter. Saved me a lot of time!

Goals:
  - use authlogic gem to handle session authentication
  - support multiple OpenID identities (from embark project, idselector.com support and recaptcha gem)
  - support decryption of user passwords (from insoshi project)
  - role-based authorization (role_requirement gem)
  - administrative interface (from baseapp project)
  - yaml configuration (configatron gem)
  - use DRY form builders (awesome_fields and better_partials gems)
  - improved outgoing and incoming mail handling and background tasks 
  - seo-friendly URLs (friendly_id and static_actions gems; not yet 
included)
  - thor task system (from blank project; not yet included)
  - jquery support (from blank project; not yet included)
(simplified_starling, tlsmail, fetcher gems)

Built against Rails 2.2.1 (in vendor/rails).

Many thanks to authors of "these starter app" frameworks and full-blown
applications:

  appstarter - http://github.com/nileshtrivedi/appstarter
  baseapp - http://github.com/ariejan/baseapp
  blank - http://github.com/giraffesoft/blank
  bort - http://github.com/fudgestudios/bort
  communityengine - http://github.com/bborn/communityengine
  embark - http://github.com/lwallenstein/embark
  insoshi - http://portal.insoshi.com
  lovdbyless - http://lovdbyless.com
  openid-rails-kit - http://github.com/stympy/openid-rails-kit

And of these gems and plugins.  Plugins are managed by the braid
project (see .braids file); gems are specified in environment.rb:

  aasm - http://github.com/rubyist/aasm
  action_mailer_optional_tls (only necessary with Rails < 2.1)
  authlogic - http://github.com/binarylogic/authlogic
  awesome_fields - http://github.com/Shadowfiend/awesome_fields
  better_partials - http://github.com/jcnetdev/better_partials
  configatron - http://github.com/cmaggard/configatron-rails
  ezcrypto
  fetcher - http://github.com/randy/fetcher
  lockfile - http://rubyforge.org/projects/codeforpeople
  open_id_authentication - http://github.com/rails/open_id_authentication
  recaptcha - http://github.com/ambethia/recaptcha
  role_requirement - http://github.com/timcharper/role_requirement
  static_actions - http://github.com/ryanb/static_actions
  will_paginate- http://github.com/mislav/will_paginate

See INSTALL for more info on how this project was built.
